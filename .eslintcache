[{"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/index.js":"1","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/App.js":"2","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/reportWebVitals.js":"3","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/shaders/Vertex.js":"4","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/shaders/Fragment.js":"5","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/components/Scene.js":"6","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/components/VisibilitySensor.js":"7","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/components/useScrollWidth.js":"8"},{"size":460,"mtime":1608572088522,"results":"9","hashOfConfig":"10"},{"size":3437,"mtime":1608580254603,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608482111311,"results":"12","hashOfConfig":"10"},{"size":926,"mtime":1608508646036,"results":"13","hashOfConfig":"10"},{"size":938,"mtime":1608513764445,"results":"14","hashOfConfig":"10"},{"size":6695,"mtime":1608578937358,"results":"15","hashOfConfig":"10"},{"size":738,"mtime":1608571788782,"results":"16","hashOfConfig":"10"},{"size":1114,"mtime":1608579328106,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1rac0ob",{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/index.js",[],["36","37"],"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/App.js",["38","39","40","41","42","43","44"],"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/reportWebVitals.js",[],"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/shaders/Vertex.js",[],"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/shaders/Fragment.js",[],"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/components/Scene.js",["45","46"],"import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { vertex } from \"../shaders/Vertex\";\nimport { fragment } from \"../shaders/Fragment\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport img2 from \"../img/img2.jpg\";\nimport img1 from \"../img/img1.jpg\";\nimport img3 from \"../img/img3.jpg\";\nimport gsap from \"gsap\";\n\nclass Scene extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textures: [],\n\n      current: 0,\n    };\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n  }\n\n  componentDidMount() {\n    this.scene = new THREE.Scene();\n    this.renderer = new THREE.WebGLRenderer();\n\n    this.width = this.mount.clientWidth;\n    this.height = this.mount.clientHeight;\n    this.renderer.setClearColor(0x000000, 1);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.physicallyCorrectLights = true;\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n    this.textures = [\n      new THREE.TextureLoader().load(img1),\n      new THREE.TextureLoader().load(img2),\n      new THREE.TextureLoader().load(img3),\n    ];\n    this.container = document.getElementById(\"scene\");\n\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      this.width / this.height,\n      0.1,\n      1000\n    );\n    this.current = 0;\n\n    this.camera.position.set(0, 0, 4);\n    // this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    this.mouse = new THREE.Vector2();\n    this.prevsmouse = new THREE.Vector2();\n    this.time = 0;\n    this.targetSpeed = 0;\n    this.setupResize();\n    this.addObjects();\n    this.resize();\n    this.mouseEvents();\n    this.animate();\n    this.mouseMoveEvent();\n  }\n\n  mouseEvents() {\n    /*  document.addEventListener(\"mousedown\", () => {\n        console.log(\"click\")\n        this.next()\n    }) */\n    document.addEventListener(\"click\", () => {\n      if (this.props.isPushed) {\n        console.log(this.props.isPushed)\n        this.props.setPushed(false)\n        console.log(this.props.isPushed)\n        this.material.uniforms.direction.value = 0;\n        gsap.to(this.material.uniforms.progress, {\n          value: 1,\n          duration: 0.5,\n        });\n      } else {\n        console.log(this.props.isPushed)\n        this.props.setPushed(true)\n        console.log(this.props.isPushed)\n        this.material.uniforms.direction.value = 1;\n        gsap.to(this.material.uniforms.progress, {\n          value: 0,\n          duration: 0.5,\n        });\n        \n      }\n  \n    });\n\n/*     document.addEventListener(\"mouseup\", () => {\n      this.props.setPushed(false)\n      this.material.uniforms.direction.value = 1;\n      gsap.to(this.material.uniforms.progress, {\n        value: 0,\n        duration: 0.5,\n      });\n    }); */\n  }\n\n  getSpeed() {\n    this.speed = Math.sqrt(\n      (this.prevsmouse.x - this.mouse.x) ** 2 +\n        (this.prevsmouse.y - this.mouse.y) ** 2\n    );\n\n    this.targetSpeed += 0.1 * (this.speed - this.targetSpeed);\n    this.prevsmouse.x = this.mouse.x;\n    this.prevsmouse.y = this.mouse.y;\n  }\n\n  next() {\n    let len = this.textures.length;\n    let nextTexture = this.textures[(this.current + 1) % len];\n    console.log(nextTexture);\n    console.log(\"nextTexture\");\n    this.current++;\n    this.material.uniforms.texture.value = nextTexture;\n  }\n\n  mouseMoveEvent() {\n    document.addEventListener(\"mousemove\", (e) => {\n      //console.log(e);\n      this.mouse.x = e.clientX / this.width;\n      this.mouse.y = 1 - e.clientY / this.height;\n\n      this.material.uniforms.mouse.value = this.mouse;\n    });\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        progress: { type: \"f\", value: 0 },\n        speed: { type: \"f\", value: 0 },\n        mouse: { type: \"v2\", value: new THREE.Vector2(0, 0) },\n        direction: { type: \"f\", value: 0 },\n        texture: { type: \"t\", value: this.textures[this.props.activeIndex] },\n        resolution: { type: \"v4\", value: new THREE.Vector4() },\n        uvRate1: {\n          value: new THREE.Vector2(1, 1),\n        },\n      },\n      vertexShader: vertex,\n      fragmentShader: fragment,\n    });\n\n    this.geometry = new THREE.PlaneGeometry(1, 1, 100, 100);\n\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.plane);\n\n    // this.scene.add(this.cube);\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  setupResize = () => {\n    window.addEventListener(\"resize\", this.resize);\n  };\n\n  resize = () => {\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    console.log(\"resize\");\n\n    this.imageAspect = 853 / 1280;\n\n    let a1;\n    let a2;\n\n    if (this.height / this.width > this.imageAspect) {\n      a1 = (this.width / this.height) * this.imageAspect;\n      a2 = 1;\n    } else {\n      a1 = 1;\n      a2 = this.height / this.width / this.imageAspect;\n    }\n\n    this.material.uniforms.resolution.value.x = this.width;\n    this.material.uniforms.resolution.value.y = this.height;\n    this.material.uniforms.resolution.value.z = a1;\n    this.material.uniforms.resolution.value.w = a2;\n\n    const dist = this.camera.position.z;\n    const height = 1;\n    this.camera.fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * dist));\n\n    if (this.width / this.height > 1) {\n      this.plane.scale.x = this.camera.aspect;\n    } else {\n      this.plane.scale.y = 1 / this.camera.aspect;\n    }\n\n    this.camera.updateProjectionMatrix();\n    console.log(this.camera);\n  };\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    //this.cube.rotation.x += 0.01;\n    //this.cube.rotation.y += 0.01;\n\n    this.time += 0.05;\n    this.getSpeed();\n    this.material.uniforms.texture.value = this.textures[this.props.activeIndex];\n    this.material.uniforms.time.value = this.time;\n    this.material.uniforms.speed.value = this.targetSpeed;\n    this.frameId = requestAnimationFrame(this.animate);\n    this.renderScene();\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n     \n        <div\n          id=\"scene\"\n          ref={(mount) => {\n            this.mount = mount;\n          }}\n        />\n \n    );\n  }\n}\n\nexport default Scene;\n","/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/components/VisibilitySensor.js",[],"/Users/ishansengupta/Desktop/full-distortion/full-distortion/src/components/useScrollWidth.js",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":23},{"ruleId":"53","severity":1,"message":"57","line":1,"column":25,"nodeType":"55","messageId":"56","endLine":1,"endColumn":34},{"ruleId":"53","severity":1,"message":"58","line":1,"column":36,"nodeType":"55","messageId":"56","endLine":1,"endColumn":47},{"ruleId":"53","severity":1,"message":"59","line":27,"column":5,"nodeType":"55","messageId":"56","endLine":27,"endColumn":15},{"ruleId":"53","severity":1,"message":"60","line":50,"column":12,"nodeType":"55","messageId":"56","endLine":50,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":66,"column":11,"nodeType":"63","endLine":66,"endColumn":47},{"ruleId":"53","severity":1,"message":"64","line":83,"column":44,"nodeType":"55","messageId":"56","endLine":83,"endColumn":52},{"ruleId":"53","severity":1,"message":"65","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":23},{"ruleId":"53","severity":1,"message":"66","line":136,"column":9,"nodeType":"55","messageId":"56","endLine":136,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":3,"column":1,"nodeType":"69","endLine":41,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":38,"column":6,"nodeType":"72","endLine":38,"endColumn":19,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'colorArray' is assigned a value but never used.","'setPushed' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'parallax' is assigned a value but never used.","'OrbitControls' is defined but never used.","'that' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'handleResize' and 'ref'. Either include them or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [handleResize, ref]",{"range":"79","text":"80"},[927,940],"[handleResize, ref]"]